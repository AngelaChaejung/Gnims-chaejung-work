[{"/Users/angela/Documents/GitHub/채정작업용Gnims/src/index.js":"1","/Users/angela/Documents/GitHub/채정작업용Gnims/src/App.js":"2","/Users/angela/Documents/GitHub/채정작업용Gnims/src/reportWebVitals.js":"3","/Users/angela/Documents/GitHub/채정작업용Gnims/src/serviceWorkerRegistration.js":"4","/Users/angela/Documents/GitHub/채정작업용Gnims/src/redux/config/ConfigStore.jsx":"5","/Users/angela/Documents/GitHub/채정작업용Gnims/src/styles/GlobalStyle.jsx":"6","/Users/angela/Documents/GitHub/채정작업용Gnims/src/shared/Router.jsx":"7","/Users/angela/Documents/GitHub/채정작업용Gnims/src/redux/modules/LoginSlice.jsx":"8","/Users/angela/Documents/GitHub/채정작업용Gnims/src/page/LoginPage.jsx":"9","/Users/angela/Documents/GitHub/채정작업용Gnims/src/page/SingupPage.jsx":"10","/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/layout/Layout.jsx":"11","/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/login/KakaoLogin.jsx":"12","/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/login/KakaoLoginLoding.jsx":"13","/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/follow/FollowList.jsx":"14","/Users/angela/Documents/GitHub/채정작업용Gnims/src/shared/AxiosInstance.jsx":"15","/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/login/EmailLogin.jsx":"16","/Users/angela/Documents/GitHub/채정작업용Gnims/src/shared/OAuth.jsx":"17","/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/signup/Signup.jsx":"18","/Users/angela/Documents/GitHub/채정작업용Gnims/src/api/LoginApi.jsx":"19","/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/modal/Modal.jsx":"20","/Users/angela/Documents/GitHub/채정작업용Gnims/src/page/ScheduleRegisterPage.jsx":"21","/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/Schedule/ScheduleAdd.jsx":"22","/Users/angela/Documents/GitHub/채정작업용Gnims/src/page/NaverLoginPage.jsx":"23","/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/login/NaverLogin.jsx":"24","/Users/angela/Documents/GitHub/채정작업용Gnims/src/redux/modules/ScheduleSlice.jsx":"25","/Users/angela/Documents/GitHub/채정작업용Gnims/src/page/callback.jsx":"26","/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/modal/KebabButtonModal.jsx":"27","/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/Schedule/ScheduleDetail.jsx":"28","/Users/angela/Documents/GitHub/채정작업용Gnims/src/page/ScheduleDetailPage.jsx":"29","/Users/angela/Documents/GitHub/채정작업용Gnims/src/page/SetProfileNamePage.jsx":"30","/Users/angela/Documents/GitHub/채정작업용Gnims/src/page/MainPage.jsx":"31","/Users/angela/Documents/GitHub/채정작업용Gnims/src/page/SetProfileImgPage.jsx":"32","/Users/angela/Documents/GitHub/채정작업용Gnims/src/redux/modules/SingupSlice.jsx":"33","/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/button/LoginButton.jsx":"34","/Users/angela/Documents/GitHub/채정작업용Gnims/src/api/Signup.jsx":"35","/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/signup/SetProfileName.jsx":"36","/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/signup/SetProfileImg.jsx":"37","/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/layout/TopNavBar.jsx":"38","/Users/angela/Documents/GitHub/채정작업용Gnims/src/page/NotificationsPage.jsx":"39","/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/notification/NotificationList.jsx":"40","/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/modal/ScheduleModal.jsx":"41","/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/mypage/Profile.jsx":"42","/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/layout/LoginSignupInputBox.jsx":"43","/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/layout/Label.jsx":"44","/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/layout/BottomNavi.jsx":"45","/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/Schedule/ScheduleDetailParticipants.jsx":"46","/Users/angela/Documents/GitHub/채정작업용Gnims/src/api/Schedule.jsx":"47","/Users/angela/Documents/GitHub/채정작업용Gnims/src/redux/modules/InvitationSlice.jsx":"48","/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/mypage/ScheduleInvitation.jsx":"49","/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/layout/TopNavTitleBar.jsx":"50","/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/mypage/ InvitationCard.jsx":"51"},{"size":1012,"mtime":1676624016235,"results":"52","hashOfConfig":"53"},{"size":226,"mtime":1676624016200,"results":"54","hashOfConfig":"53"},{"size":364,"mtime":1676624016245,"results":"55","hashOfConfig":"53"},{"size":5064,"mtime":1676624016245,"results":"56","hashOfConfig":"53"},{"size":392,"mtime":1676624016242,"results":"57","hashOfConfig":"53"},{"size":178,"mtime":1676624016248,"results":"58","hashOfConfig":"53"},{"size":2751,"mtime":1676624016247,"results":"59","hashOfConfig":"53"},{"size":4412,"mtime":1676624016243,"results":"60","hashOfConfig":"53"},{"size":243,"mtime":1676624016236,"results":"61","hashOfConfig":"53"},{"size":301,"mtime":1676624016241,"results":"62","hashOfConfig":"53"},{"size":854,"mtime":1676624016214,"results":"63","hashOfConfig":"53"},{"size":495,"mtime":1676624016218,"results":"64","hashOfConfig":"53"},{"size":778,"mtime":1676624016218,"results":"65","hashOfConfig":"53"},{"size":1006,"mtime":1676624016210,"results":"66","hashOfConfig":"53"},{"size":638,"mtime":1676624016246,"results":"67","hashOfConfig":"53"},{"size":7367,"mtime":1676624016217,"results":"68","hashOfConfig":"53"},{"size":578,"mtime":1676624016247,"results":"69","hashOfConfig":"53"},{"size":15087,"mtime":1676624016225,"results":"70","hashOfConfig":"53"},{"size":338,"mtime":1676624016203,"results":"71","hashOfConfig":"53"},{"size":1724,"mtime":1676624016220,"results":"72","hashOfConfig":"53"},{"size":221,"mtime":1676624016239,"results":"73","hashOfConfig":"53"},{"size":7938,"mtime":1676640275763,"results":"74","hashOfConfig":"53"},{"size":209,"mtime":1676624016237,"results":"75","hashOfConfig":"53"},{"size":1284,"mtime":1676624016219,"results":"76","hashOfConfig":"53"},{"size":1854,"mtime":1676624016244,"results":"77","hashOfConfig":"53"},{"size":2114,"mtime":1676624016241,"results":"78","hashOfConfig":"53"},{"size":913,"mtime":1676642304405,"results":"79","hashOfConfig":"53"},{"size":3048,"mtime":1676642304404,"results":"80","hashOfConfig":"53"},{"size":268,"mtime":1676624016238,"results":"81","hashOfConfig":"53"},{"size":197,"mtime":1676624016240,"results":"82","hashOfConfig":"53"},{"size":104,"mtime":1676624016237,"results":"83","hashOfConfig":"53"},{"size":192,"mtime":1676624016239,"results":"84","hashOfConfig":"53"},{"size":2561,"mtime":1676624016244,"results":"85","hashOfConfig":"53"},{"size":470,"mtime":1676624016209,"results":"86","hashOfConfig":"53"},{"size":470,"mtime":1676624016204,"results":"87","hashOfConfig":"53"},{"size":6860,"mtime":1676624016224,"results":"88","hashOfConfig":"53"},{"size":4638,"mtime":1676624016224,"results":"89","hashOfConfig":"53"},{"size":1544,"mtime":1676624016216,"results":"90","hashOfConfig":"53"},{"size":375,"mtime":1676624016238,"results":"91","hashOfConfig":"53"},{"size":261,"mtime":1676624016223,"results":"92","hashOfConfig":"53"},{"size":875,"mtime":1676624016221,"results":"93","hashOfConfig":"53"},{"size":3556,"mtime":1676624016222,"results":"94","hashOfConfig":"53"},{"size":493,"mtime":1676624016215,"results":"95","hashOfConfig":"53"},{"size":387,"mtime":1676624016213,"results":"96","hashOfConfig":"53"},{"size":1141,"mtime":1676624016211,"results":"97","hashOfConfig":"53"},{"size":1342,"mtime":1676642304405,"results":"98","hashOfConfig":"53"},{"size":205,"mtime":1676624016203,"results":"99","hashOfConfig":"53"},{"size":1462,"mtime":1676624016243,"results":"100","hashOfConfig":"53"},{"size":1464,"mtime":1676624016222,"results":"101","hashOfConfig":"53"},{"size":935,"mtime":1676624016217,"results":"102","hashOfConfig":"53"},{"size":1307,"mtime":1676624016221,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lql00k",{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226"},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242"},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","suppressedMessages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","suppressedMessages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","suppressedMessages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261"},{"filePath":"262","messages":"263","suppressedMessages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265"},{"filePath":"266","messages":"267","suppressedMessages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","suppressedMessages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272"},"/Users/angela/Documents/GitHub/채정작업용Gnims/src/index.js",[],[],"/Users/angela/Documents/GitHub/채정작업용Gnims/src/App.js",[],[],"/Users/angela/Documents/GitHub/채정작업용Gnims/src/reportWebVitals.js",[],[],"/Users/angela/Documents/GitHub/채정작업용Gnims/src/serviceWorkerRegistration.js",[],[],"/Users/angela/Documents/GitHub/채정작업용Gnims/src/redux/config/ConfigStore.jsx",[],[],"/Users/angela/Documents/GitHub/채정작업용Gnims/src/styles/GlobalStyle.jsx",[],[],"/Users/angela/Documents/GitHub/채정작업용Gnims/src/shared/Router.jsx",["273"],[],"import React from \"react\";\nimport { BrowserRouter, Route, Routes, Navigate } from \"react-router-dom\";\nimport Layout from \"../components/layout/Layout\";\nimport styled from \"styled-components\";\nimport LoginPage from \"../page/LoginPage\";\nimport SignupPage from \"../page/SingupPage\";\nimport KakaoLogin from \"../components/login/KakaoLogin\";\nimport KakaoLoginLoding from \"../components/login/KakaoLoginLoding\";\nimport FollowList from \"../components/follow/FollowList\";\nimport Profile from \"../components/mypage/Profile\";\nimport ScheduleRegisterPage from \"../page/ScheduleRegisterPage\";\nimport NaverLoginPage from \"../page/NaverLoginPage\";\nimport Callback from \"../page/callback\";\nimport ScheduleDetailPage from \"../page/ScheduleDetailPage\";\nimport MainPage from \"../page/MainPage\";\nimport SetProfileNamePage from \"../page/SetProfileNamePage\";\nimport SetProfileImgPage from \"../page/SetProfileImgPage\";\nimport NotificationsPage from \"../page/NotificationsPage\";\nimport ScheduleInvitation from \"../components/mypage/ScheduleInvitation\";\n\nconst Router = () => {\n  return (\n    <BrowserRouter>\n      <Container>\n        <Layout>\n          <Routes>\n            <Route path=\"/main\" element={<MainPage />} />\n            {localStorage.getItem(\"nickname\") ? (\n              <Route path=\"/\" element={<MainPage />} />\n            ) : (\n              <Route path=\"/\" element={<LoginPage />} />\n            )}\n            <Route path=\"/login\" element={<LoginPage />} />\n            <Route path=\"/signup\" element={<SignupPage />} />\n            <Route path=\"/kakaoLogin\" element={<KakaoLogin />} />\n            <Route path=\"auth/kakao/callback\" element={<KakaoLoginLoding />} />\n            <Route path=\"/follow\" element={<FollowList />} />\n            <Route path=\"/profile\" element={<Profile />} />\n            <Route path=\"/schedule\" element={<ScheduleRegisterPage />} />\n            <Route path=\"/naver/login\" element={<NaverLoginPage />} />\n            <Route path=\"/callback\" element={<Callback />} />\n            <Route path=\"/detail\" element={<ScheduleDetailPage />} />\n            <Route\n              path=\"/signup/setProfileName\"\n              element={<SetProfileNamePage />}\n            />\n            <Route\n              path=\"/signup/setProfileImg\"\n              element={<SetProfileImgPage />}\n            />\n            <Route path=\"/notification\" element={<NotificationsPage />} />\n            <Route\n              path=\"/scheduleinvitation\"\n              element={<ScheduleInvitation />}\n            />\n          </Routes>\n        </Layout>\n      </Container>\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\nconst Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  box-sizing: border-box;\n`;\n","/Users/angela/Documents/GitHub/채정작업용Gnims/src/redux/modules/LoginSlice.jsx",["274","275"],[],"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { instance } from \"../../shared/AxiosInstance\";\nimport axios from \"axios\";\nimport { LoginApi } from \"../../api/LoginApi\";\nimport { setSingup } from \"./SingupSlice\";\n\n//이메일 로그인\nexport const __emailLogin = ({\n  email,\n  password,\n  navigate,\n  onModalOpen,\n  setModalStr,\n}) => {\n  return async function (dispatch) {\n    await LoginApi.EmailLogin({ email: email, password: password })\n      .then((response) => {\n        const accessToken = response.headers.get(\"Authorization\");\n        console.log(response);\n        const { email, nickname, profileImage } = response.data.data;\n\n        \n        localStorage.setItem(\"accessToken\", accessToken);\n        localStorage.setItem(\"email\", email);\n        localStorage.setItem(\"nickname\", nickname);\n        localStorage.setItem(\"profileImage\", profileImage);\n        alert(`${nickname}님 어서오세요.`);\n        navigate(\"/main\");\n      })\n      .catch((error) => {\n        console.log(error);\n        const { data } = error.response;\n        console.log(data);\n        if (data.status === 401) {\n          setModalStr({\n            modalTitle: \"ID를 찾을 수 없어요.\",\n            modalMessage:\n              \"아이디(이메일)과 비밀번호를    다시 한 번 확인해주세요.\",\n          });\n          onModalOpen();\n        }\n      });\n  };\n};\n\n//카카오 로그인\nexport const __kakaologin = createAsyncThunk(\n  \"kakaologin\",\n  //전달 받은 코드 비동기로 처리\n  async (code, thunkAPI) => {\n    try {\n      console.log(\"페이로드?\", code);\n      const data = await instance.post(\"/kakao/login\", { code }).then((res) => {\n        console.log(\"서버에서 보내는값?\", res.data.data);\n        const email = res.data.data.email;\n        localStorage.setItem(\"email\", email);\n        localStorage.setItem(\"socialCode\", \"KAKAO\");\n\n        if (res.data.message !== \"non-member\") {\n          const accessToken = res.headers.get(\"Authorization\");\n          const nickname = res.data.data.nickname;\n          console.log(nickname);\n          localStorage.setItem(\"token\", accessToken);\n          localStorage.setItem(\"nickname\", nickname);\n          alert(\"그님스에 오신걸 환영합니다\");\n          return window.location.assign(\"/main\");\n\n          //멤버가 아닐시 프로필 정보를 받는 페이지로 돌려야함\n        } else if (res.data.message === \"non-member\") {\n          alert(\"그님스를 이용하려면 프로필 정보를 입력해줘야합니다.\");\n          return window.location.assign(\"/signup/setProfileName\");\n        }\n        // const accessToken = res.headers.get(\"Authorization\");\n        // const nickname = res.data.nickname;\n        // const email = res.data.email;\n\n        // // 유저 토큰,닉네임,이메일이 있다면 가져온 후 세팅\n        // if (accessToken && nickname && email) {\n        //   localStorage.setItem(\"token\", accessToken);\n        //   localStorage.setItem(\"nickname\", nickname);\n        //   localStorage.setItem(\"email\", email);\n        //   alert(`소셜로그인 인증 완료! ${nickname}님 환영합니다!`);\n        //   return window.location.assign(\"/\");\n        // }\n        // else {\n        //   alert(\"인증 오류! 다시 시도해주세요!\");\n        //   return window.location.assign(\"/\");\n        // }\n      });\n      return thunkAPI.fulfillWithValue(data);\n    } catch (error) {\n      window.location.assign(\"/\");\n      return thunkAPI.rejectWithValue(error);\n    }\n  }\n);\n\nconst initialState = {\n  error: null,\n  isLoading: false,\n  message: \"\",\n  email: \"\",\n};\n\nconst LoginSlice = createSlice({\n  name: \"login\",\n  initialState,\n  reducers: {\n    isLoading: (state, action) => {\n      state.isLoading = action.payload;\n    },\n    setMessage: (state, action) => {\n      state.message = action.payload;\n    },\n  },\n  extraReducers: {\n    //카카오 소셜로그인\n    [__kakaologin.pending]: (state) => {\n      state.isLoading = true;\n    },\n    [__kakaologin.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.loginCheck = true;\n      state.email = action.payload;\n    },\n    [__kakaologin.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const { isLoading, isLogin, setMessage } = LoginSlice.actions;\nexport default LoginSlice.reducer;\n","/Users/angela/Documents/GitHub/채정작업용Gnims/src/page/LoginPage.jsx",[],[],"/Users/angela/Documents/GitHub/채정작업용Gnims/src/page/SingupPage.jsx",[],[],"/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/layout/Layout.jsx",[],[],"/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/login/KakaoLogin.jsx",[],[],"/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/login/KakaoLoginLoding.jsx",["276","277","278"],[],"import React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { __kakaologin } from \"../../redux/modules/LoginSlice\";\n\n//인가코드를 백으로 전달하기 위한 페이지\nconst KakaoLoginLoding = () => {\n  const dispatch = useDispatch();\n\n  // new URL 객체에서 searchParams객체의 get메소드를 사용하여 'code'키의 값을 추출\n  const code = new URL(window.location.href).searchParams.get(\"code\");\n  console.log(\"카카오 인가코드\", code);\n\n  // 페이지가 로딩됨과 동시에 디스패치로 code 전달\n  useEffect(() => {\n    dispatch(__kakaologin(code));\n  });\n  return <div>카카오 로딩 페이지</div>;\n};\n\nexport default KakaoLoginLoding;\n","/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/follow/FollowList.jsx",["279","280"],[],"import React, { useState } from \"react\";\n\nconst FollowList = () => {\n  const tapmenu = [\"팔로우\", \"팔로워\"];\n  const [editmode, setEditMode] = useState(false);\n\n  return (\n    <div className=\"mt-6\">\n      <div className=\"flex flex-wrap gap-5\">\n        <div>\n          <button className=\"bg-blue-500 h-5\"> 뒤로 </button>\n        </div>\n        <div>\n          <div className=\"text-center\">팔로우 목록</div>\n        </div>\n      </div>\n      <div className=\"flex text-center\">\n        {tapmenu.map((index) => {\n          return (\n            <div\n              key={index}\n              className=\"pt-3 border-solid border-2 border-black w-1/2 h-10\"\n            >\n              {index}\n            </div>\n          );\n        })}\n      </div>\n      <div className=\"flex space-x-50\">\n        <div className=\"flex\">\n          <div>프로필사진</div>\n          <div>유저이름</div>\n        </div>\n        <button>팔로우</button>\n      </div>\n    </div>\n  );\n};\n\nexport default FollowList;\n","/Users/angela/Documents/GitHub/채정작업용Gnims/src/shared/AxiosInstance.jsx",[],[],"/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/login/EmailLogin.jsx",["281"],[],"import React, { useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport IsModal from \"../modal/Modal\";\nimport kakaologo from \"../../img/kakao_login_medium_narrow.png\";\nimport { KAKAO_AUTH_URL } from \"../../shared/OAuth\";\nimport LoginButton from \"../button/LoginButton\";\nimport \"../style/login.css\";\nimport { __emailLogin } from \"../../redux/modules/LoginSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport NaverLogin from \"../../page/NaverLoginPage\";\nimport Label from \"../layout/Label\";\nimport LoginSignupInputBox from \"../layout/LoginSignupInputBox\";\n\nconst EmailLogin = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [isOpen, setOpen] = useState(false);\n  const [ModalStr, setModalStr] = useState({\n    modalTitle: \"\",\n    modalMessage: \"\",\n  });\n  const { isLoading } = useSelector((state) => state.LoginSlice);\n\n  console.log(isLoading);\n  //서버에 전달하기 위한 input Ref 생성\n  const userEmailRef = useRef();\n  const userPasswordRef = useRef();\n\n  //아이디 비밀번호가 틀렸을시 문구표시여부\n  const [regulation, SetRegulation] = useState({\n    regulationEmail: true,\n    regulationPassword: true,\n  });\n\n  //이메일, 비밀번호 정규 표현식\n  const emailRegulationExp =\n    /^[a-zA-Z0-9+-\\_.]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/;\n  const passwordRegulationExp = /^(?=.*[a-zA-Z])(?=.*\\d)[a-zA-Z\\d]{9,20}$/;\n\n  //유효성검사\n  const onValidity = (event) => {\n    const { id, value } = event.target;\n\n    if (id === \"userEmail\") {\n      if (!emailRegulationExp.test(value)) {\n        SetRegulation(() => ({ ...regulation, regulationEmail: false }));\n      } else SetRegulation(() => ({ ...regulation, regulationEmail: true }));\n    } else {\n      if (!passwordRegulationExp.test(value)) {\n        SetRegulation(() => ({ ...regulation, regulationPassword: false }));\n      } else SetRegulation(() => ({ ...regulation, regulationPassword: true }));\n    }\n  };\n\n  //모달창\n  const onModalOpen = () => {\n    setOpen({ isOpen: true });\n  };\n  const onMoalClose = () => {\n    setOpen({ isOpen: false });\n  };\n\n  //서버에 전달\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    const userEmailCurrent = userEmailRef.current;\n    const userPasswordCurrent = userPasswordRef.current;\n    const emailValue = userEmailCurrent.value;\n    const passwordValue = userPasswordCurrent.value;\n\n    //이메일 빈칸 및 유효성검사\n    if (emailValue.trim() === \"\") {\n      SetRegulation(() => ({ ...regulation, regulationEmail: false }));\n      userEmailCurrent.focus();\n      return;\n    } else if (!emailRegulationExp.test(emailValue)) {\n      SetRegulation(() => ({ ...regulation, regulationEmail: false }));\n      return;\n    }\n\n    //비밀번호빈칸 및 유효성검사\n    if (passwordValue.trim() === \"\") {\n      SetRegulation(() => ({ ...regulation, regulationPassword: false }));\n      userPasswordCurrent.focus();\n      return;\n    } else if (!passwordRegulationExp.test(passwordValue)) {\n      SetRegulation(() => ({ ...regulation, regulationPassword: false }));\n      userPasswordCurrent.focus();\n      return;\n    }\n\n    dispatch(\n      __emailLogin({\n        email: emailValue,\n        password: passwordValue,\n        navigate,\n        onModalOpen,\n        setModalStr,\n      })\n    );\n  };\n\n  //카카오 로그인\n  const onClickKakaoLongin = () => {\n    window.location.href = KAKAO_AUTH_URL;\n  };\n\n  return (\n    <div className=\"container md\">\n      <div className=\"ml-[20px] mr-[20px]\">\n        <div className=\"grid grid-rows \">\n          <div className=\" h-[150px] mt-[94px]\">\n            <div className=\"mx-auto w-[87px] h-[64px] overflow-hidden gap-[10px] \">\n              <img\n                src=\"https://pbs.twimg.com/media/FACQ9-hUcAcA_11.jpg \"\n                alt=\"곰캐릭터가 우쭐거리며 왠지 잘될 것 같은 기분포즈 중\"\n                className=\"h-full w-full \"\n              />\n            </div>\n          </div>\n          <form className=\"mt-[-40px]\">\n            <div className=\" grid grid-row-3 gap-[10px]\">\n              <div className=\"\">\n                <div className=\" grid grid-row-2\">\n                  <Label htmlFor=\"userEmail\">이메일</Label>\n                  <LoginSignupInputBox\n                    id=\"userEmail\"\n                    ref={userEmailRef}\n                    onChange={onValidity}\n                    placeholder=\"아이디(이메일) 입력\"\n                  />\n                </div>\n                <div className=\"flex items-center \">\n                  <p\n                    className=\"h-[40px]  w-full font-[500] text-[16px] text-[#DE0D0D] flex items-center\"\n                    hidden={regulation.regulationEmail}\n                  >\n                    아이디(이메일)을 입력해주세요.\n                  </p>\n                </div>\n              </div>\n              <div className=\"\">\n                <div className=\"grid grid-row-2\">\n                  <Label htmlFor=\"userPassword\">비밀번호</Label>\n                  <LoginSignupInputBox\n                    ref={userPasswordRef}\n                    onChange={onValidity}\n                    id=\"userPassword\"\n                    placeholder=\"비밀번호 입력\"\n                  />\n                </div>\n                <div className=\"flex items-center \">\n                  <p\n                    className=\"h-[40px] w-full font-[500] text-[16px] text-[#DE0D0D] flex items-center\"\n                    hidden={regulation.regulationPassword}\n                  >\n                    8글자이상 입력 해주세요.\n                  </p>\n                </div>\n              </div>\n              <button\n                onClick={onSubmit}\n                className=\"h-[50px] rounded w-full bg-[#002C51] font-[700] text-[#ffff] mt-[24px]\"\n              >\n                로그인\n              </button>\n            </div>\n          </form>\n          <div className=\"mt-[26px] grid grid-cols-2 text-center\">\n            <div>\n              <button className=\"text-[#12396F] text-[16px] font-[400] px-[30px] py-[10px]\">\n                비밀번호 재설정\n              </button>\n            </div>\n            <div>\n              <button\n                className=\"text-[#12396F] text-[16px] font-[400] px-[30px] py-[10px] \"\n                onClick={() => navigate(`/signup`)}\n              >\n                회원가입\n              </button>\n            </div>\n          </div>\n          <div className=\"hr-sect\">\n            <div>간편 로그인</div>\n          </div>\n          <div className=\"flex gap-[110px] mx-auto h-[100px] mt-[46px]\">\n            <div className=\"text-center \">\n              <NaverLogin />\n              <p className=\"mt-[20px] text-[#12396F] font-[400] text-[14px]\">\n                네이버\n              </p>\n            </div>\n            <div className=\"text-center\">\n              <LoginButton onEvent={onClickKakaoLongin} img={kakaologo} />\n              <p className=\"mt-[20px] text-[#12396F] font-[400] text-[14px]\">\n                카카오\n              </p>\n            </div>\n          </div>\n          <IsModal\n            isModalOpen={isOpen.isOpen}\n            onMoalClose={onMoalClose}\n            message={{ ModalStr }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EmailLogin;\n","/Users/angela/Documents/GitHub/채정작업용Gnims/src/shared/OAuth.jsx",[],[],"/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/signup/Signup.jsx",["282","283"],[],"import React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { SignupApi } from \"../../api/Signup\";\nimport TopNavTitleBar from \"../layout/TopNavTitleBar\";\nimport IsModal from \"../modal/Modal\";\nimport {\n  __nickNameCheck,\n  userInfoState,\n  setSingup,\n} from \"../../redux/modules/SingupSlice\";\nimport Label from \"../layout/Label\";\nimport LoginSignupInputBox from \"../layout/LoginSignupInputBox\";\n\nconst Signup = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [isOpen, setOpen] = useState(false);\n  const [ModalStr, setModalStr] = useState({\n    modalTitle: \"\",\n    modalMessage: \"\",\n  });\n\n  const { singup } = useSelector((state) => state.SingupSlice);\n  const { nickNameDoubleCheck } = useSelector((state) => state.SingupSlice);\n\n  //회원가입 전에 user정보가 redux에 있는지 확인 후 실행\n  useEffect(() => {\n    if (singup === \"emailLogin\") {\n      console.log(singup);\n      navigate(\"/signup/setProfileImg\");\n    }\n  }, [dispatch, navigate, singup]);\n\n  //Ref생성\n  const userNameRef = useRef();\n  const userEmailRef = useRef();\n  const userPasswordRef = useRef();\n  const userNickNameRef = useRef();\n  //이름, 이메일, 비밀번호, 닉네임 정규 표현식\n  const nameRegulationExp = /^[ㄱ-ㅎ|가-힣|a-z|A-Z|]+$/;\n  const emailRegulationExp =\n    /^[a-zA-Z0-9+-\\_.]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/;\n  const passwordRegulationExp = /^(?=.*[a-zA-Z])(?=.*\\d)[a-zA-Z\\d]{9,20}$/;\n  const nickNameReglationExp = /^(?=.*[a-z0-9가-힣])[a-z0-9가-힣]{2,8}$/;\n\n  //아이디 비밀번호가 틀렸을시 문구\n  const [regulation, SetRegulation] = useState({\n    regulationName: \"\",\n    regulationEmail: \"\",\n    regulationPassword: \"\",\n    regulationPasswordCheck: \"\",\n    regulationNickName: \"\",\n  });\n\n  const [hidden, Sethidden] = useState({\n    hiddenErrorMeassageName: true,\n    hiddenErrorMeassaEmail: true,\n    hiddenErrorMeassaNickName: true,\n    hiddenErrorMeassaName: true,\n    hiddenErrorMeassaPassword: true,\n    hiddenErrorMeassaPasswordCheck: true,\n  });\n\n  //중복확인여부\n  const [doubleCheck, setDoubleCheck] = useState({\n    emailDoubleCheck: false,\n    passwordDoubleCheck: false,\n  });\n\n  //유효성검사\n  const onValidity = (event) => {\n    const { id, value } = event.target;\n    const password = userPasswordRef.current.value;\n    if (id === \"userName\") {\n      if (!nameRegulationExp.test(value)) {\n        SetRegulation(() => ({\n          ...regulation,\n          regulationName: \"한글 또는 영어로 작성해주세요.\",\n        }));\n        Sethidden(() => ({\n          ...hidden,\n          hiddenErrorMeassaName: false,\n        }));\n      } else {\n        Sethidden(() => ({\n          ...hidden,\n          hiddenErrorMeassaName: true,\n        }));\n      }\n    } else if (id === \"userEmail\") {\n      if (emailRegulationExp.test(value)) {\n        SetRegulation(() => ({\n          ...regulation,\n          regulationEmail: \"올바른 이메일 형식입니다.\",\n        }));\n        Sethidden(() => ({\n          ...hidden,\n          hiddenErrorMeassaEmail: false,\n        }));\n      } else {\n        SetRegulation(() => ({\n          ...regulation,\n          regulationEmail: \"올바른 이메일 형식이 아닙니다.\",\n        }));\n        Sethidden(() => ({\n          ...hidden,\n          hiddenErrorMeassaEmail: false,\n        }));\n      }\n    } else if (id === \"userNickName\") {\n      if (nickNameReglationExp.test(value)) {\n        //SetRegulation(() => ({ ...regulation, regulationNickName: \"\" }));\n        Sethidden(() => ({\n          ...hidden,\n          hiddenErrorMeassaNickName: true,\n        }));\n      } else {\n        SetRegulation(() => ({\n          ...regulation,\n          regulationNickName: \"글자수 2~8자와 한글,영문,숫자만 포함해주세요.\",\n        }));\n        Sethidden(() => ({\n          ...hidden,\n          hiddenErrorMeassaNickName: false,\n        }));\n      }\n    } else if (id === \"userPassword\") {\n      if (passwordRegulationExp.test(value)) {\n        //SetRegulation(() => ({ ...regulation, regulationPassword: \"\" }));\n        Sethidden(() => ({\n          ...hidden,\n          hiddenErrorMeassaPassword: true,\n        }));\n      } else {\n        SetRegulation(() => ({\n          ...regulation,\n          regulationPassword:\n            \"최소 8 자리에서 영대소문자와 숫자를 포함시켜주세요.\",\n        }));\n        Sethidden(() => ({\n          ...hidden,\n          hiddenErrorMeassaPassword: false,\n        }));\n      }\n    } else if (id === \"passwordCheck\") {\n      if (password === value) {\n        setDoubleCheck(() => ({ ...doubleCheck, passwordDoubleCheck: true }));\n        // SetRegulation(() => ({\n        //   ...regulation,\n        //   regulationPasswordCheck: \"\",\n        // }));\n        Sethidden(() => ({\n          ...hidden,\n          hiddenErrorMeassaPasswordCheck: true,\n        }));\n      } else {\n        SetRegulation(() => ({\n          ...regulation,\n          regulationPasswordCheck: \"비밀번호와 일치하는지 확인해주세요.\",\n        }));\n        Sethidden(() => ({\n          ...hidden,\n          hiddenErrorMeassaPasswordCheck: true,\n        }));\n      }\n    }\n  };\n\n  //이메일 중복확인\n  const onEmailDoubleCheck = (event) => {\n    event.preventDefault();\n\n    const emailCurrent = userEmailRef.current;\n\n    if (emailCurrent.value.trim() === \"\") {\n      SetRegulation(() => ({\n        ...regulation,\n        regulationEmail: \"이메일을 입력해주세요.\",\n      }));\n      emailCurrent.focus();\n      return;\n    }\n\n    emailDoubleCheckAxios({\n      email: emailCurrent.value,\n    });\n  };\n\n  const emailDoubleCheckAxios = async (payload) => {\n    await SignupApi.emailDoubleCheck(payload)\n      .then((response) => {\n        console.log(response);\n        setModalStr({\n          modalTitle: response.message,\n          modalMessage: \"\",\n        });\n        onModalOpen();\n        setDoubleCheck(() => ({\n          ...doubleCheck,\n          emailDoubleCheck: true,\n        }));\n      })\n      .catch((error) => {\n        const { data } = error.response;\n        if (data.status === 400) {\n          setModalStr({\n            modalTitle: data.message,\n            modalMessage: \"이메일을 확인해주세요.\",\n          });\n          onModalOpen();\n        } else {\n          console.log(error);\n        }\n      });\n  };\n\n  //id\n  //닉네임 확인하기\n  const onNickNameCheck = (event) => {\n    event.preventDefault();\n\n    const nickNameCurrent = userNickNameRef.current;\n\n    if (nickNameCurrent.value.trim() === \"\") {\n      SetRegulation(() => ({\n        ...regulation,\n        regulationNickName: \"닉네임을 입력해주세요.\",\n      }));\n      Sethidden(() => ({\n        ...hidden,\n        hiddenErrorMeassaNickName: false,\n      }));\n      nickNameCurrent.focus();\n      return;\n    } else {\n      Sethidden(() => ({\n        ...hidden,\n        hiddenErrorMeassaNickName: true,\n      }));\n    }\n    dispatch(\n      __nickNameCheck({\n        nickname: nickNameCurrent.value,\n        onModalOpen,\n        setModalStr,\n      })\n    );\n  };\n\n  //회원가입\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    //ref 객체\n    const userNameCurrent = userNameRef.current;\n    const userEmailCurrent = userEmailRef.current;\n    const userPasswordCurrent = userPasswordRef.current;\n    const userNickNameCurrent = userNickNameRef.current;\n\n    //ref 값\n    const nameValue = userNameCurrent.value;\n    const emailValue = userEmailCurrent.value;\n    const passwordValue = userPasswordCurrent.value;\n    const nickNameValue = userNickNameCurrent.value;\n\n    if (nameValue.trim() === \"\") {\n      SetRegulation(() => ({\n        ...regulation,\n        regulationName: \"이메일을 입력해주세요.\",\n      }));\n      userNameCurrent.focus();\n      return;\n    }\n\n    if (emailValue.trim() === \"\") {\n      SetRegulation(() => ({\n        ...regulation,\n        regulationEmail: \"이메일을 입력해주세요.\",\n      }));\n      userEmailCurrent.focus();\n      return;\n    } else if (!doubleCheck.emailDoubleCheck) {\n      SetRegulation(() => ({\n        ...regulation,\n        regulationEmail: \"이메일 중복확인 해주세요.\",\n      }));\n      userEmailCurrent.focus();\n      return;\n    }\n\n    if (nickNameValue.trim() === \"\") {\n      SetRegulation(() => ({\n        ...regulation,\n        regulationNickName: \"닉네임을 입력해주세요.\",\n      }));\n      userNickNameCurrent.focus();\n      return;\n    } else if (!nickNameDoubleCheck) {\n      SetRegulation(() => ({\n        ...regulation,\n        regulationNickName: \"닉네임 중복확인 해주세요.\",\n      }));\n      userNickNameCurrent.focus();\n      return;\n    }\n\n    if (passwordValue.trim() === \"\") {\n      SetRegulation(() => ({\n        ...regulation,\n        regulationPassword: \"비밀번호를 입력해주세요.\",\n      }));\n      userPasswordCurrent.focus();\n      return;\n    }\n\n    if (!doubleCheck.passwordDoubleCheck) {\n      SetRegulation(() => ({\n        ...regulation,\n        regulationPassword: \"비밀번호 중복확인 해주세요.\",\n      }));\n      userPasswordCurrent.focus();\n      return;\n    }\n\n    dispatch(\n      userInfoState({\n        username: nameValue,\n        nickname: nickNameValue,\n        email: emailValue,\n        password: passwordValue,\n        profileImage: null,\n      })\n    );\n    dispatch(setSingup(\"emailLogin\"));\n  };\n\n  //모달창\n  const onModalOpen = () => {\n    setOpen({ isOpen: true });\n  };\n  const onMoalClose = () => {\n    setOpen({ isOpen: false });\n  };\n\n  return (\n    <>\n      <div className=\"container md\">\n        <div className=\" grid grid-flow-row ml-[20px] mr-[20px] gap-[32px]\">\n          <div className=\" grid grid-flow-row gap-[10px] mt-[105px]\">\n            <div>\n              <h1 className=\"font-[700] text-[#12396F] text-[32px] mb-[10px]\">\n                Welcome Gnims!\n              </h1>\n            </div>\n            <div className=\"font-[500] text-[#12396F] text-[24px] \">\n              <p className=\"mb-[15px]\">일정관리, 공유의 샛별</p>\n              <p>그님스는 여러분을 환영해요!</p>\n            </div>\n          </div>\n          <form className=\"\">\n            <div className=\"grid gird-rows-5 gap-[20px]\">\n              <div>\n                <Label htmlFor=\"userName\">이름</Label>\n                <LoginSignupInputBox\n                  id=\"userName\"\n                  ref={userNameRef}\n                  onChange={onValidity}\n                  placeholder=\"사용자의 이름을 입력해주세요.\"\n                />\n                <div\n                  className=\"flex items-center\"\n                  hidden={hidden.hiddenErrorMeassaName}\n                >\n                  <p className=\"h-[40px] w-full font-[500] text-[16px]  text-[#DE0D0D] flex items-center\">\n                    {regulation.regulationName}\n                  </p>\n                </div>\n              </div>\n              <div className=\"relative\">\n                <Label htmlFor=\"userEmail\">이메일</Label>\n                <div>\n                  <input\n                    id=\"userEmail\"\n                    ref={userEmailRef}\n                    placeholder=\"아이디로 사용할 이메일을 입력해주세요.\"\n                    onChange={onValidity}\n                    className=\"w-full px-1 h-[50px] text-[16px] focus:placeholder-[#12396f] placeholder-[#12396fa1]\"\n                  ></input>\n                  <button\n                    className=\"absolute right-[5px]  mt-[18px] font-[600] text-textNavy text-[16px]\"\n                    onClick={onEmailDoubleCheck}\n                  >\n                    중복 확인\n                  </button>\n                </div>\n                <div hidden={hidden.hiddenErrorMeassaEmail}>\n                  <p className=\" w-full font-[500] mt-[20px] text-[16px] text-[#DE0D0D] flex items-center\">\n                    {regulation.regulationEmail}\n                  </p>\n                </div>\n              </div>\n              <div>\n                <Label htmlFor=\"userNickName\">닉네임</Label>\n                <input\n                  id=\"userNickName\"\n                  ref={userNickNameRef}\n                  placeholder=\"2~8자리 숫자,한글,영문을 입력해주세요.\"\n                  onChange={onValidity}\n                  className=\"w-full px-1 h-[50px] text-[16px] focus:placeholder-[#12396f] placeholder-[#12396fa1]\"\n                ></input>\n                <button\n                  className=\"absolute right-[24px]  mt-[18px] font-[600] text-textNavy text-[16px]\"\n                  onClick={onNickNameCheck}\n                >\n                  중복 확인\n                </button>\n                <div hidden={hidden.hiddenErrorMeassaNickName}>\n                  <p className=\" w-full font-[500] mt-[20px] text-[16px] text-[#DE0D0D] flex items-center\">\n                    {regulation.regulationNickName}\n                  </p>\n                </div>\n              </div>\n\n              <div>\n                <Label htmlFor=\"userPassword\">비밀번호</Label>\n                <div>\n                  <LoginSignupInputBox\n                    id=\"userPassword\"\n                    ref={userPasswordRef}\n                    placeholder=\"8~16자리 영문 대소문자, 숫자 조합\"\n                    onChange={onValidity}\n                  />\n                </div>\n                <div\n                  hidden={hidden.hiddenErrorMeassaPassword}\n                  className=\"mt-[10px]\"\n                >\n                  <p className=\"w-full font-[500] text-[16px] text-[#DE0D0D] flex items-center\">\n                    {regulation.regulationPassword}\n                  </p>\n                </div>\n              </div>\n              <div>\n                <Label htmlFor=\"passwordCheck\">비밀번호 확인</Label>\n                <div>\n                  <LoginSignupInputBox\n                    id=\"passwordCheck\"\n                    placeholder=\"8~16자리 영문 대소문자, 숫자 조합\"\n                    onChange={onValidity}\n                  />\n                </div>\n                <div\n                  hidden={hidden.hiddenErrorMeassaPasswordCheck}\n                  className=\"mt-[10px]\"\n                >\n                  <p className=\"w-full font-[500] text-[16px] text-[#DE0D0D] flex items-center\">\n                    {regulation.regulationPasswordCheck}\n                  </p>\n                </div>\n              </div>\n            </div>\n            <div>\n              <button\n                onClick={onSubmit}\n                className=\"h-[50px] rounded w-full bg-[#002C51] font-[700] text-[#ffff] mt-[24px] mb-[69px]\"\n              >\n                회원가입 완료\n              </button>\n            </div>\n          </form>\n          <IsModal\n            isModalOpen={isOpen.isOpen}\n            onMoalClose={onMoalClose}\n            message={{ ModalStr }}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Signup;\n","/Users/angela/Documents/GitHub/채정작업용Gnims/src/api/LoginApi.jsx",[],[],"/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/modal/Modal.jsx",["284"],[],"import React, { useState } from \"react\";\nimport Modal from \"react-modal\";\n\nconst IsModal = ({ isModalOpen, onMoalClose, message }) => {\n  const modalStr = message.ModalStr;\n\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const modalStyle = {\n    overlay: {\n      position: \"fixed\",\n      top: 0,\n      left: 10,\n      right: 10,\n      bottom: 0,\n      backgroundColor: \"#53535339\",\n      zIndex: 10,\n    },\n    content: {\n      justifyContent: \"center\",\n      background: \"#fcfcfc\",\n      overflow: \"auto\",\n      left: \"calc(50% - 300px/2 + 0.5px)\",\n      top: \"calc(50% - 167px/2)\",\n      height: \"167px\",\n      width: \"300px\",\n      WebkitOverflowScrolling: \"touch\",\n      borderRadius: \"16px\",\n      outline: \"none\",\n      zIndex: 10,\n      padding: \"16px\",\n    },\n  };\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      style={modalStyle}\n      ariaHideApp={false}\n      aria={{\n        labelledby: \"heading\",\n        describedby: \"full_description\",\n      }}\n      shouldCloseOnEsc={false}\n      onRequestClose={() => setModalIsOpen(false)}\n    >\n      <div className=\"grid grid-flow-row gap-[20px] text-center\">\n        <div className=\"flex flex-col items-center gap-[14px] mt-[10px]\">\n          <h1 className=\"px-[10px]  text-[#12396F] text-[18px] font-[700] whitespace-pre-line\">\n            {modalStr.modalTitle}\n          </h1>\n          <p className=\"font-[400] text-[14px] text-[#12396F]\">\n            {modalStr.modalMessage}\n          </p>\n        </div>\n        <button\n          className=\"w-full bg-[#002C51] h-[40px] rounded-[4px] font-[600] text-[#fff]\"\n          onClick={onMoalClose}\n        >\n          확인\n        </button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default IsModal;\n","/Users/angela/Documents/GitHub/채정작업용Gnims/src/page/ScheduleRegisterPage.jsx",[],[],"/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/Schedule/ScheduleAdd.jsx",["285"],[],"/Users/angela/Documents/GitHub/채정작업용Gnims/src/page/NaverLoginPage.jsx",[],[],"/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/login/NaverLogin.jsx",["286"],[],"import { useEffect, useRef } from \"react\";\nimport NaverUnion from \"../../img/NaverUnion.png\";\n\nconst NaverLogin = () => {\n  const naverRef = useRef();\n  const { naver } = window;\n  //    깃헙에 올릴 땐 아래의 env활용\n  const NAVER_CLIENT_ID = \"T9R5hFNUTuTa1UqoVBcO\";\n  // process.env.REACT_APP_NAVER_CLIENT_ID;\n  const NAVER_CALLBACK_URL = \"http://localhost:3000/callback\";\n  // process.env.REACT_APP_NAVER_CALLBACK_URL;\n  const initializeNaverLogin = () => {\n    const naverLogin = new naver.LoginWithNaverId({\n      clientId: NAVER_CLIENT_ID,\n      callbackUrl: NAVER_CALLBACK_URL,\n      isPopup: false,\n      loginButton: { color: \"green\", type: 1, height: 58 },\n      callbackHandle: true,\n    });\n    naverLogin.init();\n  };\n  //원형아이콘클릭해도 네이버로그인이 가능.\n  const handleClick = () => {\n    naverRef.current.children[0].click();\n  };\n  // 화면 첫 렌더링이후 바로 실행\n  useEffect(() => {\n    initializeNaverLogin();\n  }, []);\n\n  return (\n    <>\n      {/*네이버 로그인아이콘표시 */}\n      <div ref={naverRef} id=\"naverIdLogin\" />\n      <img\n        onClick={handleClick}\n        className=\"h-[60px]\"\n        src={NaverUnion}\n        alt=\"네이버로고이미지\"\n      />\n    </>\n  );\n};\nexport default NaverLogin;\n","/Users/angela/Documents/GitHub/채정작업용Gnims/src/redux/modules/ScheduleSlice.jsx",["287","288"],[],"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { ScheduleApi } from \"../../api/Schedule\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\nconst initialState = {\n  schedules: [],\n  id: 0,\n  cardColor: \"\",\n  date: null,\n  time: null,\n  subject: \"\",\n  content: \"\",\n  participantsId: null,\n  isLoading: false,\n};\n\n// export const __getSchedule = createAsyncThunk(\n//   \"schedule/getSchedules\",\n//   async (payload, thunkAPI) => {\n//     try {\n//       console.log(\"Slice\" + payload);\n//       const { data } = await ScheduleApi.getSccheduleApi(payload);\n//       console.log(data.data);\n//       return thunkAPI.fulfillWithValue(data.data);\n//     } catch {}\n//   }\n// );\n\nexport const __postSchedule = createAsyncThunk(\n  \"schedule/postSchedules\",\n  async (payload, thunkAPI) => {\n    try {\n      const data = ScheduleApi.scheduleAdd(payload);\n      return thunkAPI.fulfillWithValue(data.data);\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error);\n    }\n  }\n);\n\nexport const ScheduleSlice = createSlice({\n  name: \"scheduler\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    // [__getSchedule.pending]: (state) => {\n    //   state.isLoading = true;\n    // },\n    // [__getSchedule.fulfilled]: (state, action) => {\n    //   state.schedules = action.payload;\n    // },\n    // [__getSchedule.rejected]: (state, action) => {\n    //   state.isLoading = false;\n    //   state.error = action.payload;\n    // },\n\n    [__postSchedule.pending]: (state) => {\n      state.isLoading = true;\n    },\n    [__postSchedule.fulfilled]: (state, action) => {\n      state.schedules = [...state.schedules, action.payload];\n    },\n    [__postSchedule.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n  },\n});\n\nexport default ScheduleSlice.reducer;\n","/Users/angela/Documents/GitHub/채정작업용Gnims/src/page/callback.jsx",["289"],[],"import axios from \"axios\";\nimport React, { useEffect } from \"react\";\n\nfunction Callback() {\n  const userAccessToken = () => {\n    window.location.href.includes(\"access_token\") && getToken();\n  };\n\n  const getToken = async () => {\n    const navertoken = window.location.href.split(\"=\")[1].split(\"&\")[0];\n    console.log(navertoken);\n    // URL에서 추출한 access token을 로컬 스토리지에 저장\n\n    // localStorage.setItem(\"NaverAuthorization\", navertoken);\n  };\n\n  const sendTokenAndGetAuthorization = async () => {\n    await axios\n      .get(\"https://eb.jxxhxxx.shop/naver/login\", {\n        //   .get(\"http://hayangaeul.shop/naver/login\", {\n        headers: {\n          token: window.location.href.split(\"=\")[1].split(\"&\")[0],\n        },\n      })\n      .then((res) => {\n        //이미 멤버라면 Authorization이 담겨 올 것이고, member라고\n        console.log(\"res\", res);\n        console.log(\"email?\", res.data.data.email);\n        console.log(\"member?\", res.data.message);\n        const email = res.data.data.email;\n        if (res.data.message !== \"non-member\") {\n          const accessToken = res.headers.get(\"Authorization\");\n          const nickname = res.data.data.nickname;\n          console.log(nickname);\n          localStorage.setItem(\"token\", accessToken);\n          localStorage.setItem(\"nickname\", nickname);\n          alert(\"그님스에 오신걸 환영합니다\");\n          return window.location.assign(\"/main\");\n\n          //멤버가 아닐시 프로필 정보를 받는 페이지로 돌려야함\n        } else if (res.data.message === \"non-member\") {\n          alert(\"그님스를 이용하려면 프로필 정보를 입력해줘야합니다.\");\n          localStorage.setItem(\"email\", email);\n          localStorage.setItem(\"socialCode\", \"NAVER\");\n          return window.location.assign(\"/signup/setProfileName\");\n        }\n      });\n    // console.log(data);\n  };\n\n  useEffect(() => {\n    userAccessToken();\n    getToken();\n    sendTokenAndGetAuthorization();\n  }, []);\n\n  return (\n    <div>\n      <div>loding...</div>\n    </div>\n  );\n}\n\nexport default Callback;\n","/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/modal/KebabButtonModal.jsx",["290","291"],[],"/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/Schedule/ScheduleDetail.jsx",[],[],"/Users/angela/Documents/GitHub/채정작업용Gnims/src/page/ScheduleDetailPage.jsx",[],[],"/Users/angela/Documents/GitHub/채정작업용Gnims/src/page/SetProfileNamePage.jsx",[],[],"/Users/angela/Documents/GitHub/채정작업용Gnims/src/page/MainPage.jsx",[],[],"/Users/angela/Documents/GitHub/채정작업용Gnims/src/page/SetProfileImgPage.jsx",[],[],"/Users/angela/Documents/GitHub/채정작업용Gnims/src/redux/modules/SingupSlice.jsx",["292","293"],[],"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { Action } from \"@remix-run/router\";\nimport { SignupApi } from \"../../api/Signup\";\n\n//닉네임 중복확인\nexport const __nickNameCheck = ({ nickname, onModalOpen, setModalStr }) => {\n  return async function (dispatch) {\n    console.log(nickname);\n    SignupApi.nickNameDoubleCheck({ nickname: nickname })\n      .then((response) => {\n        console.log(response);\n        setModalStr({\n          modalTitle: response.message,\n          modalMessage: \"\",\n        });\n        onModalOpen();\n        dispatch(isNickNameDoubleCheck(true));\n      })\n      .catch((error) => {\n        const { data } = error.response;\n        if (data.status === 400) {\n          setModalStr({\n            modalTitle: \"닉네임을 확인해주세요.\",\n            modalMessage: data.message,\n          });\n          onModalOpen();\n        } else {\n          setModalStr({\n            modalTitle: \"닉네임을 확인해주세요.\",\n            modalMessage: data.message,\n          });\n          onModalOpen();\n        }\n      });\n  };\n};\n\n//회원가입\nexport const __sginup = async ({\n  username,\n  nickname,\n  email,\n  password,\n  setModalStr,\n  onModalOpen,\n}) => {\n  await SignupApi.Signup({ username, nickname, email, password })\n    .then((response) => {\n      console.log(response);\n      setModalStr(() => response.message);\n      onModalOpen();\n      window.history.back();\n    })\n    .catch((error) => {\n      const { data } = error.response;\n      if (data.status === 401) {\n        console.log(data.message);\n        setModalStr(data.message);\n        onModalOpen();\n      }\n    });\n};\n\nconst initialState = {\n  userInfo: {\n    username: null,\n    nickname: null,\n    email: null,\n    password: null,\n    profileImage: null,\n  },\n  singup: null,\n  NameNickName: null,\n  error: null,\n  isLoading: false,\n  message: \"\",\n  nickNameDoubleCheck: false,\n};\n\nconst SingupSlice = createSlice({\n  name: \"singup\",\n  initialState,\n  reducers: {\n    userInfoState: (state, action) => {\n      console.log(action.payload);\n      state.userInfo = action.payload;\n    },\n    setNameNickName: (state, action) => {\n      state.NameNickName = action.payload;\n    },\n    setSingup: (state, action) => {\n      state.singup = action.payload;\n    },\n    isNickNameDoubleCheck: (state, action) => {\n      state.nickNameDoubleCheck = action.payload;\n    },\n  },\n});\n\nexport const {\n  userInfoState,\n  setNameNickName,\n  setSingup,\n  isNickNameDoubleCheck,\n} = SingupSlice.actions;\nexport default SingupSlice.reducer;\n","/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/button/LoginButton.jsx",[],[],"/Users/angela/Documents/GitHub/채정작업용Gnims/src/api/Signup.jsx",[],[],"/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/signup/SetProfileName.jsx",[],[],"/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/signup/SetProfileImg.jsx",["294","295","296"],[],"import React, { useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport profilImg from \"../../img/ProfilImg.png\";\nimport { SignupApi } from \"../../api/Signup\";\nimport IsModal from \"../modal/Modal\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router\";\n\nconst SetProfileImg = () => {\n  const navigate = useNavigate();\n\n  const [isOpen, setOpen] = useState(false);\n  const [ModalStr, setModalStr] = useState({\n    modalTitle: \"\",\n    modalMessage: \"\",\n  });\n  const { singup, NameNickName, userInfo } = useSelector(\n    (state) => state.SingupSlice\n  );\n  const imgRef = useRef();\n  const [image, setImage] = useState(profilImg);\n  const [imageFile, setImageFile] = useState(\"\");\n\n  const imagePreview = () => {\n    const reader = new FileReader();\n    reader.readAsDataURL(imgRef.current.files[0]);\n    return new Promise((resolve) => {\n      reader.onload = () => {\n        setImage(reader.result);\n        resolve();\n      };\n    });\n  };\n\n  const onSingup = async () => {\n    //폼데이터 변환\n    setImageFile(imgRef.current.files[0]);\n    const imgFile = imgRef.current.files[0];\n    const formData = new FormData();\n    if (imgFile !== undefined) {\n      formData.append(\"image\", imgFile);\n    } else {\n      formData.append(\"image\", null);\n    }\n\n    if (singup === \"emailLogin\") {\n      const url = \"https://eb.jxxhxxx.shop/auth/signup\";\n      const data = {\n        username: userInfo.username,\n        nickname: userInfo.nickname,\n        email: userInfo.email,\n        password: userInfo.password,\n      };\n      sginupAxios({ data, formData, url });\n    } else {\n      const url = \"https://eb.jxxhxxx.shop/social/signup\";\n      const data = {\n        username: NameNickName.nickname,\n        nickname: NameNickName.username,\n        email: window.localStorage.getItem(\"email\"),\n        socialCode: window.localStorage.getItem(\"socialCode\"),\n      };\n\n      //소셜 회원가입 API가 나왔을때\n      sginupAxios({ data, formData, url });\n    }\n  };\n\n  //모달창\n  const onModalOpen = () => {\n    setOpen({ isOpen: true });\n  };\n  const onMoalClose = () => {\n    setOpen({ isOpen: false });\n  };\n\n  //이메일 회원가입시 백단 연결\n  const sginupAxios = async ({ formData, data, url }) => {\n    console.log(data);\n    const json = JSON.stringify(data);\n    const blob = new Blob([json], { type: \"application/json\" });\n    console.log(blob);\n    formData.append(\"data\", blob);\n\n    await axios\n      .post(url, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      })\n      .then((response) => {\n        console.log(response);\n        alert(`${response.data.message}`);\n        navigate(\"/login\");\n      })\n      .catch((error) => {\n        console.log(error.response);\n        const { data } = error.response;\n        if (data.status === 400) {\n          console.log(data.message);\n          setModalStr({\n            modalTitle: data.messages,\n            modalMessage: \"닉네임과 이름을 다시 한 번 확인해주세요.\",\n          });\n          onModalOpen();\n        }\n      });\n  };\n\n  //소셜회원가입시 백단 연결\n\n  return (\n    <div className=\"App container md mt-[110px] \">\n      <div className=\"grid grid-flow-row ml-[20px] mr-[20px]\">\n        <div>\n          <label\n            htmlFor=\"userName\"\n            className=\"cursor-pointer text-[#12396F] font-[500] text-[16px]\"\n          >\n            프로필 사진을 설정해주세요.\n          </label>\n        </div>\n        <div>\n          <div className=\"mt-[53px]\">\n            <label htmlFor=\"profileImg\">\n              <div className=\" h-[86px] w-[86px] justify-center mx-auto\">\n                <img\n                  className=\"rounded-full h-full w-full\"\n                  src={image}\n                  alt=\"프로필이미지\"\n                />\n              </div>\n            </label>\n            <input\n              //모든타입의 이미지허용\n              accept=\"image/*\"\n              id=\"profileImg\"\n              type=\"file\"\n              ref={imgRef}\n              style={{ display: \"none\" }}\n              multiple\n              onChange={imagePreview}\n            />\n          </div>\n          <button\n            onClick={onSingup}\n            className=\"h-[50px] rounded w-full bg-[#002C51] font-[700] text-[#ffff] mt-[24px]\"\n          >\n            그님스시작하기\n          </button>\n        </div>\n      </div>\n      <IsModal\n        isModalOpen={isOpen.isOpen}\n        onMoalClose={onMoalClose}\n        message={{ ModalStr }}\n      />\n    </div>\n  );\n};\n\nexport default SetProfileImg;\n","/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/layout/TopNavBar.jsx",[],[],"/Users/angela/Documents/GitHub/채정작업용Gnims/src/page/NotificationsPage.jsx",[],[],"/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/notification/NotificationList.jsx",[],[],"/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/modal/ScheduleModal.jsx",[],[],"/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/mypage/Profile.jsx",["297","298","299","300","301","302","303","304"],[],"import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport Vector from \"../../img/Vector.png\";\nimport basicImg from \"../../img/User-86.png\";\n\nconst Profile = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  // 임시로 사용하는 데이터\n  // localStorage.setItem(\"nickname\", \"동퐈\");\n  // localStorage.setItem(\"email\", \"cdh0283@gmail.com\");\n  // localStorage.setItem(\"profileImage\", \"\");\n\n  //로컬 스토리지에 있는 데이터를 가져오는 코드\n  const nickname = localStorage.getItem(\"nickname\");\n  const email = localStorage.getItem(\"email\");\n  const profileImage = localStorage.getItem(\"profileImage\");\n\n  //페이지 렌더링시 팔로우 정보를 가져와야함\n  useEffect(() => {}, []);\n\n  return (\n    <div>\n      <div className=\"flex p-5 gap-[30px] justify-items-center\">\n        <div className=\"p-2  w-[86px] h-[86px]\">\n          <img className=\"rounded-full\" src={basicImg} />\n        </div>\n        <div className=\"inline-block pt-2\">\n          <div className=\"text-lg font-semibold leading-[21px]\">\n            {nickname} 님\n          </div>\n          <div className=\"text-[14px] leading-[17px] font-light align-top\">\n            {email}\n          </div>\n          <div className=\"flex gap-10 pt-2\">\n            <div className=\"text-[16px] font-normal leading-[17px]\">\n              팔로잉 1\n            </div>\n            <div className=\"text-[16px]  font-normal leading-[17px]\">\n              팔로워 22\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"flex flex-col items-baseline pt-10\">\n        <div\n          onClick={() => {\n            navigate();\n          }}\n          className=\"flex gap-[130px] p-[15px] border-b-[1px] border-[#BBD7FF] border-solid bg-white w-[375px] h-[50px]\"\n        >\n          <span className=\"text-sm w-[175px] h-[20px]\">비밀번호 재설정</span>\n          <img src={Vector} alr=\"화살표\" />\n        </div>\n        <div\n          onClick={() => {\n            navigate();\n          }}\n          className=\"flex gap-[130px] p-[15px] border-b-[1px] border-[#BBD7FF] border-solid bg-white w-[375px] h-[50px]\"\n        >\n          <span className=\"text-sm w-[175px] h-[20px]\">나의 지난 일정</span>\n          <img src={Vector} alr=\"화살표\" />\n        </div>\n        <div\n          onClick={() => {\n            navigate(\"/scheduleinvitation\");\n          }}\n          className=\"flex gap-[130px] p-[15px] border-b-[1px] border-[#BBD7FF] border-solid bg-white w-[375px] h-[50px]\"\n        >\n          <span className=\"text-sm w-[175px] h-[20px]\">내게 온 초대 목록</span>\n          <img src={Vector} alr=\"화살표\" />\n        </div>\n        <div\n          onClick={() => {\n            navigate();\n          }}\n          className=\"flex gap-[130px] p-[15px] border-b-[1px] border-[#BBD7FF] border-solid bg-white w-[375px] h-[50px]\"\n        >\n          <span className=\"text-sm w-[175px] h-[20px]\">알림 설정</span>\n          <img src={Vector} alr=\"화살표\" />\n        </div>\n        <div\n          onClick={() => {\n            navigate();\n          }}\n          className=\"flex gap-[130px] p-[15px] border-b-[1px] border-[#BBD7FF] border-solid bg-white w-[375px] h-[50px]\"\n        >\n          <span className=\"text-sm w-[175px] h-[20px]\">\n            그님스 피드백 보내기\n          </span>\n          <img src={Vector} alr=\"화살표\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/layout/LoginSignupInputBox.jsx",[],[],"/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/layout/Label.jsx",[],[],"/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/layout/BottomNavi.jsx",[],[],"/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/Schedule/ScheduleDetailParticipants.jsx",["305"],[],"/Users/angela/Documents/GitHub/채정작업용Gnims/src/api/Schedule.jsx",[],[],"/Users/angela/Documents/GitHub/채정작업용Gnims/src/redux/modules/InvitationSlice.jsx",["306","307"],[],"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { instance } from \"../../shared/AxiosInstance\";\n\nconst initialState = {\n  data: [\n    {\n      eventId: null,\n      date: \"\",\n      time: \"\",\n      cardColor: \"\",\n      subject: \"\",\n      invitees: [\n        {\n          username: \"\",\n          profile: \"\",\n        },\n      ],\n      dday: null,\n    },\n  ],\n  isLoading: false,\n  error: null,\n};\n\nexport const __getInvitation = createAsyncThunk(\n  \"getInvitation\",\n  async (payload, thunkAPI) => {\n    try {\n      const data = await instance.get(`/events/pending`);\n      console.log(\"무슨데이터?\", data);\n      return thunkAPI.fulfillWithValue(data.data);\n    } catch (error) {\n      console.log(\"무슨에러?\", error);\n      console.log(error.response.data.errorMessage);\n      return thunkAPI.rejectWithValue(error.response.data.errorMessage);\n    }\n  }\n);\n\nexport const invitationSlice = createSlice({\n  name: \"invitation\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [__getInvitation.pending]: (state) => {\n      state.isLoading = true;\n    },\n    [__getInvitation.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.todos = action.payload;\n    },\n    [__getInvitation.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const {} = invitationSlice.actions;\nexport default invitationSlice.reducer;\n","/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/mypage/ScheduleInvitation.jsx",["308","309"],[],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport basicImg from \"../../img/User-86.png\";\nimport { __getInvitation } from \"../../redux/modules/InvitationSlice\";\nimport InvitationCard from \"./ InvitationCard\";\n\nconst ScheduleInvitation = () => {\n  localStorage.setItem(\"nickname\", \"동퐈\");\n  const nickname = localStorage.getItem(\"nickname\");\n\n  const dispatch = useDispatch();\n  const { isLoading, error, data } = useSelector(\n    (state) => state.InvitationSlice\n  );\n\n  useEffect(() => {\n    dispatch(__getInvitation());\n  }, []);\n\n  if (isLoading) {\n    return <div>로딩 중....</div>;\n  }\n\n  if (error) {\n    return <div>{error.message}</div>;\n  }\n\n  return (\n    <div>\n      <div className=\"flex p-5 gap-[30px] justify-items-center\">\n        <div className=\"flex-none p-2 w-[86px] h-[86px] border-2 border-solid border-red-500\">\n          <img className=\"rounded-full\" src={basicImg} />\n        </div>\n        <div className=\"pt-2 border-2 border-red-500 border-solid\">\n          <div className=\"text-[18px] pt-[12px] leading-[21px]\">\n            <span>\n              {nickname} 님에게 온 일정 초대를 한 번에 확인 할 수 있습니다.\n            </span>\n          </div>\n        </div>\n      </div>\n      <div>\n        {data.map((invit) => (\n          <InvitationCard key={invit.eventId} invit={invit} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ScheduleInvitation;\n","/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/layout/TopNavTitleBar.jsx",[],[],"/Users/angela/Documents/GitHub/채정작업용Gnims/src/components/mypage/ InvitationCard.jsx",["310"],[],"import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst InvitationCard = ({ invit }) => {\n  console.log(\"뭘까요?\", invit);\n\n  return (\n    <div>\n      <div className=\"rounded-[10px] mx-[20px] w-[335px] h-[184px] bg-gray-500\">\n        <div className=\"flex gap-[50px] relative top-[16px] \">\n          <div className=\"flex ml-[23px]  gap-[20px]\">\n            <span className=\"text-sm\">{invit.date}</span>\n            <span className=\"text-sm\">{invit.time}</span>\n          </div>\n          <span className=\"text-sm\">from.{invit.invitees.username}</span>\n        </div>\n        <div className=\"ml-[23px] relative top-[20px]\">\n          <div className=\"p-2 text-md\">\n            일이삼사오육칠팔구십일이삼사오육칠팔구십\n          </div>\n        </div>\n        <div className=\"flex relative top-[44px] h-[57px] text-center items-center border-t-[1px] border-[#BBD7FF] border-solid\">\n          <div className=\"flex items-center justify-center flex-1 h-full text-center text-md\">\n            거절\n          </div>\n          <div className=\"flex text-center justify-center items-center flex-1 border-l-[1px] h-full border-[#BBD7FF] border-solid text-md\">\n            수락\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InvitationCard;\n",{"ruleId":"311","severity":1,"message":"312","line":2,"column":40,"nodeType":"313","messageId":"314","endLine":2,"endColumn":48},{"ruleId":"311","severity":1,"message":"315","line":3,"column":8,"nodeType":"313","messageId":"314","endLine":3,"endColumn":13},{"ruleId":"311","severity":1,"message":"316","line":5,"column":10,"nodeType":"313","messageId":"314","endLine":5,"endColumn":19},{"ruleId":"311","severity":1,"message":"317","line":1,"column":28,"nodeType":"313","messageId":"314","endLine":1,"endColumn":34},{"ruleId":"311","severity":1,"message":"318","line":1,"column":36,"nodeType":"313","messageId":"314","endLine":1,"endColumn":44},{"ruleId":"311","severity":1,"message":"319","line":3,"column":10,"nodeType":"313","messageId":"314","endLine":3,"endColumn":21},{"ruleId":"311","severity":1,"message":"320","line":5,"column":10,"nodeType":"313","messageId":"314","endLine":5,"endColumn":18},{"ruleId":"311","severity":1,"message":"321","line":5,"column":20,"nodeType":"313","messageId":"314","endLine":5,"endColumn":31},{"ruleId":"322","severity":1,"message":"323","line":37,"column":19,"nodeType":"324","messageId":"325","endLine":37,"endColumn":20,"suggestions":"326"},{"ruleId":"311","severity":1,"message":"327","line":5,"column":8,"nodeType":"313","messageId":"314","endLine":5,"endColumn":22},{"ruleId":"322","severity":1,"message":"323","line":43,"column":19,"nodeType":"324","messageId":"325","endLine":43,"endColumn":20,"suggestions":"328"},{"ruleId":"311","severity":1,"message":"329","line":7,"column":10,"nodeType":"313","messageId":"314","endLine":7,"endColumn":21},{"ruleId":"330","severity":1,"message":"331","line":109,"column":6,"nodeType":"332","endLine":109,"endColumn":35,"suggestions":"333"},{"ruleId":"330","severity":1,"message":"334","line":29,"column":6,"nodeType":"332","endLine":29,"endColumn":8,"suggestions":"335"},{"ruleId":"311","severity":1,"message":"315","line":2,"column":8,"nodeType":"313","messageId":"314","endLine":2,"endColumn":13},{"ruleId":"311","severity":1,"message":"336","line":5,"column":7,"nodeType":"313","messageId":"314","endLine":5,"endColumn":15},{"ruleId":"330","severity":1,"message":"337","line":55,"column":6,"nodeType":"332","endLine":55,"endColumn":8,"suggestions":"338"},{"ruleId":"311","severity":1,"message":"339","line":1,"column":17,"nodeType":"313","messageId":"314","endLine":1,"endColumn":26},{"ruleId":"311","severity":1,"message":"317","line":1,"column":28,"nodeType":"313","messageId":"314","endLine":1,"endColumn":34},{"ruleId":"311","severity":1,"message":"340","line":1,"column":23,"nodeType":"313","messageId":"314","endLine":1,"endColumn":39},{"ruleId":"311","severity":1,"message":"341","line":2,"column":10,"nodeType":"313","messageId":"314","endLine":2,"endColumn":16},{"ruleId":"311","severity":1,"message":"342","line":2,"column":10,"nodeType":"313","messageId":"314","endLine":2,"endColumn":21},{"ruleId":"311","severity":1,"message":"343","line":4,"column":10,"nodeType":"313","messageId":"314","endLine":4,"endColumn":19},{"ruleId":"311","severity":1,"message":"344","line":22,"column":10,"nodeType":"313","messageId":"314","endLine":22,"endColumn":19},{"ruleId":"311","severity":1,"message":"345","line":8,"column":9,"nodeType":"313","messageId":"314","endLine":8,"endColumn":17},{"ruleId":"311","severity":1,"message":"346","line":19,"column":9,"nodeType":"313","messageId":"314","endLine":19,"endColumn":21},{"ruleId":"347","severity":1,"message":"348","line":28,"column":11,"nodeType":"349","endLine":28,"endColumn":58},{"ruleId":"347","severity":1,"message":"348","line":55,"column":11,"nodeType":"349","endLine":55,"endColumn":41},{"ruleId":"347","severity":1,"message":"348","line":64,"column":11,"nodeType":"349","endLine":64,"endColumn":41},{"ruleId":"347","severity":1,"message":"348","line":73,"column":11,"nodeType":"349","endLine":73,"endColumn":41},{"ruleId":"347","severity":1,"message":"348","line":82,"column":11,"nodeType":"349","endLine":82,"endColumn":41},{"ruleId":"347","severity":1,"message":"348","line":93,"column":11,"nodeType":"349","endLine":93,"endColumn":41},{"ruleId":"311","severity":1,"message":"350","line":2,"column":23,"nodeType":"313","messageId":"314","endLine":2,"endColumn":34},{"ruleId":"311","severity":1,"message":"315","line":2,"column":8,"nodeType":"313","messageId":"314","endLine":2,"endColumn":13},{"ruleId":"351","severity":1,"message":"352","line":60,"column":14,"nodeType":"353","messageId":"354","endLine":60,"endColumn":16},{"ruleId":"330","severity":1,"message":"355","line":18,"column":6,"nodeType":"332","endLine":18,"endColumn":8,"suggestions":"356"},{"ruleId":"347","severity":1,"message":"348","line":32,"column":11,"nodeType":"349","endLine":32,"endColumn":58},{"ruleId":"311","severity":1,"message":"357","line":2,"column":10,"nodeType":"313","messageId":"314","endLine":2,"endColumn":21},"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'setSingup' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'useNavigate' is defined but never used.","'editmode' is assigned a value but never used.","'setEditMode' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\_.","Literal","unnecessaryEscape",["358","359"],"'TopNavTitleBar' is defined but never used.",["360","361"],"'modalIsOpen' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'today'. Either include it or remove the dependency array.","ArrayExpression",["362"],"React Hook useEffect has a missing dependency: 'initializeNaverLogin'. Either include it or remove the dependency array.",["363"],"'BASE_URL' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userAccessToken'. Either include it or remove the dependency array.",["364"],"'useEffect' is defined but never used.","'createAsyncThunk' is defined but never used.","'Action' is defined but never used.","'useDispatch' is defined but never used.","'SignupApi' is defined but never used.","'imageFile' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'profileImage' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useCallback' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["365"],"'useSelector' is defined but never used.",{"messageId":"366","fix":"367","desc":"368"},{"messageId":"369","fix":"370","desc":"371"},{"messageId":"366","fix":"372","desc":"368"},{"messageId":"369","fix":"373","desc":"371"},{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},{"desc":"378","fix":"379"},{"desc":"380","fix":"381"},"removeEscape",{"range":"382","text":"383"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"384","text":"385"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"386","text":"383"},{"range":"387","text":"385"},"Update the dependencies array to be: [selectedDate, selectedColor, today]",{"range":"388","text":"389"},"Update the dependencies array to be: [initializeNaverLogin]",{"range":"390","text":"391"},"Update the dependencies array to be: [userAccessToken]",{"range":"392","text":"393"},"Update the dependencies array to be: [dispatch]",{"range":"394","text":"395"},[1237,1238],"",[1237,1237],"\\",[1360,1361],[1360,1360],[3361,3390],"[selectedDate, selectedColor, today]",[897,899],"[initializeNaverLogin]",[1842,1844],"[userAccessToken]",[580,582],"[dispatch]"]